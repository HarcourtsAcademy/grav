// Your custom SCSS should be written here...

.grav-lightslider {
    .lSSlideOuter {
        .lSPager.lSpg {
            > li a {
                z-index: 1;
            }
        }
    }
}

#body > script:first-child + .grav-lightslider {
  margin-top: -3rem;
}

body.online-learning iframe {
  border: 0;
}

img.infographic {
  margin: 0 auto;
  @include breakpoint(desktop-range) {
    max-width: 48em;
  }
  @include breakpoint(large-desktop-range) {
    max-width: 48em;
  }
  display: block;
}
img.inline-left {
  float:left;
  margin: 0.5em 1em 0.5em 0;
  max-width: 16em;
  @include breakpoint(mobile-only) {
    float: none;
    display: block;
    clear: both;
    margin: 1rem auto;
  }
}

#content > ul > li,
#content > ol > li {
  padding-bottom: 0.4rem;
}

// From Bootstrap / type
.lead {
  margin-bottom: 20px;
  font-size: 1.15rem;
  font-weight: 300;
  line-height: 1.4;
  color: $core-accent;

  @include breakpoint(mobile-only) {
    font-size: 1.5rem;
  }
}
// END From Bootstrap / type

.text-and-lightbox-wrapper {
  padding-top: 2rem;
  .overview-text {
    padding-right: 2rem;
  }
}

// Table of contents
.toc ul {
  margin-top: 0;
  margin-bottom: 0;
}

// Academy Training Pathways
#training_paths_accordion {
  $accordion-height: 36;
  $accordion-icon-width: 2;
  $accordion-icon-height: 14;
  $accordion-icon-x: round(($accordion-height - $accordion-icon-height) / 2); // = 11
  $accordion-icon-y: round(($accordion-height - $accordion-icon-width) / 2); // = 12

  .panel {
    border: none;
    box-shadow: none;
    border-radius: 0;
    .panel-heading {
      background-color: $core-accent;
      border: none;
      border-radius: 0;
      padding: 0;
      .accordion-toggle {
        display: block;
        height: #{$accordion-height}px;
        /* symbol for opened panels */
        background-image: #{inline-svg("<svg width='#{$accordion-height}' height='#{$accordion-height}' viewBox='0 0 #{$accordion-height} #{$accordion-height}' xmlns='http://www.w3.org/2000/svg'> <rect fill='#000' width='#{$accordion-height}' height='#{$accordion-height}' x='0' y='0'></rect> <rect fill='#FFF' width='#{$accordion-icon-height}' height='#{$accordion-icon-width}' x='#{$accordion-icon-x}' y='#{$accordion-icon-y}'></rect> </svg>")};
        background-repeat: no-repeat;
        background-position: 0% 50%;
        h4 {
          text-align: left;
          display: inline-block;
          margin-left: 2rem;
          padding: 5px 15px;
        }
      }
      .accordion-toggle.collapsed {
          /* symbol for collapsed panels */
          background-image: #{inline-svg("<svg width='#{$accordion-height}' height='#{$accordion-height}' viewBox='0 0 #{$accordion-height} #{$accordion-height}' xmlns='http://www.w3.org/2000/svg'> <rect fill='#000' width='#{$accordion-height}' height='#{$accordion-height}' x='0' y='0'></rect> <rect fill='#FFF' width='#{$accordion-icon-height}' height='#{$accordion-icon-width}' x='#{$accordion-icon-x}' y='#{$accordion-icon-y}'></rect> <rect fill='#FFF' width='#{$accordion-icon-width}' height='#{$accordion-icon-height}' x='#{$accordion-icon-y}' y='#{$accordion-icon-x}'></rect> </svg>")};
      }
      a.accordion-toggle {
          text-decoration: none;
          color: $white;
      }
    }
  }
}

.training-path-actions {
  @include clearfix;
  text-align: center;
}

.training-path-summary {

  .training-path-description {
    padding-right: 2rem;
  }
  .training-path-list {

    ol {
      counter-reset:  li; /* Initiate a counter */
      margin-left:    0;  /* Remove the default left margin */
      padding-left:   0;  /* Remove the default left padding */
    }
    ol > li {
      position:   relative;     /* Create a positioning context */
      margin:     0 0 6px 2em;  /* Give each list item a left margin to make room for the numbers */
      padding:    4px 8px;      /* Add some spacing around the content */
      list-style: none;         /* Disable the normal item numbering */
      border-top: 2px solid $black;
      background: $secondary-bg;
    }
    ol > li:before {
      content:            counter(li);  /* Use the counter as content */
      counter-increment:  li;           /* Increment the counter by 1 */

      /* Position and style the number */
      position:           absolute;
      top:                -2px;
      left:               -2em;
      -moz-box-sizing:    border-box;
      -webkit-box-sizing: border-box;
      box-sizing:         border-box;
      width:              2em;

      /* Some space between the number and the content in browsers that support
        generated content but not positioning it (Camino 2 is one example) */
      margin-right:       8px;
      padding:            4px;
      border-top:         2px solid $black;
      color:              $white;
      background:         $black;
      font-weight:        bold;
      text-align:         center;
    }
    li ol,
    li ul {               margin-top:6px; }
    ol ol li:last-child { margin-bottom:0; }

  }
}
.salvattore-grid {
  @include clearfix;

  .training-paths-course {
    margin-right:   2rem;
    margin-bottom:  2rem;
  }
}

@include breakpoint(mobile-only) {
	.salvattore-grid[data-columns]:before {
		content: '1 .column.size-1of1';
	}
}
@include breakpoint(tablet-range) {
	.salvattore-grid[data-columns]:before {
		content: '1 .column.size-1of1';
	}
}
@include breakpoint(desktop-range) {
	.salvattore-grid[data-columns]:before {
		content: '2 .column.size-1of2';
	}
}
@include breakpoint(large-desktop-range) {
	.salvattore-grid[data-columns]:before {
		content: '2 .column.size-1of2';
	}
}
// @include breakpoint(large-desktop-range) {
// 	.salvattore-grid[data-columns]:before {
// 		content: '3 .column.size-1of3';
// 	}
// }

/* Again, youâ€™re free to use and define the classes: */
.column { float: left; }
.size-1of1 { width: 100%; }
.size-1of2 { width: 50%; }
.size-1of3 { width: 33.333%; }
